apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-casc-config
  namespace: jenkins
data:
  jenkins.yaml: |
    jenkins:
      agentProtocols:
      - "JNLP4-connect"
      - "Ping"
      authorizationStrategy:
        projectMatrix:
          entries:
          - group:
              name: "jenkins-admin"
              permissions:
              - "Overall/Administer"
          - group:
              name: "jenkins-users"
              permissions:
              - "Job/Build"
              - "Job/Read"
              - "Overall/Read"
      clouds:
      - kubernetes:
          containerCap: 10
          containerCapStr: "10"
          jenkinsTunnel: "jenkins-agent:50000"
          jenkinsUrl: "http://jenkins-http:8080"
          name: "Kubernetes"
          namespace: "jenkins"
          templates:
          - containers:
            - image: "docker-registry.local.geracorp.work/tools/jenkins-agent:v1.0.1"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
              name: "jnlp"
              ports:
              - containerPort: 8336
                hostPort: 30001
                name: "jenkins-agt-pk"
              workingDir: "/home/jenkins/agent"
            imagePullSecrets:
            - name: "docker-registry-geracorp-login"
            label: "jenkins-nomad-worker"
            name: "jenkins-agent"
            namespace: "jenkins"
            yamlMergeStrategy: "override"
      crumbIssuer:
        standard:
          excludeClientIPFromCrumb: false
      disableRememberMe: false
      disabledAdministrativeMonitors:
      - "hudson.util.DoubleLaunchChecker"
      globalNodeProperties:
      - envVars:
          env:
          - key: "PROXMOX_ADDR"
            value: "https://proxmox.home.local:8006"
          - key: "VAULT_ADDR"
            value: "https://vault.bank-vault:8200"
      labelAtoms:
      - name: "built-in"
      - name: "jenkins-agent-8kb89"
      - name: "jenkins-nomad-worker"
      - name: "master"
      labelString: "master"
      numExecutors: 2
      remotingSecurity:
        enabled: true
      securityRealm:
        ldap:
          configurations:
          - displayNameAttributeName: "cn"
            inhibitInferRootDN: false
            managerDN: "uid=${LDAP_USER},ou=people,dc=geracorp,dc=local"
            managerPasswordSecret: "${LDAP_USER_PASS}"
            rootDN: "dc=geracorp,dc=local"
            server: "lldap-service.lldap.svc.cluster.local:3890"
            userSearch: "(&(uid={0})(|(memberOf=cn=jenkins-users,ou=groups,dc=geracorp,dc=local)(memberOf=cn=jenkins-admin,ou=groups,dc=geracorp,dc=local)))"
          disableMailAddressResolver: false
          disableRolePrefixing: true
          groupIdStrategy: "caseInsensitive"
          userIdStrategy: "caseInsensitive"
    jobs:
      - script: >
          job('seedjob') {
            label('master')
            logRotator(-1, 10)
            scm {
                git {
                  branch('master')
                  remote {
                    github('gera-corp/jenkins', 'ssh', 'github.com')
                    credentials('github_jenkins_deploy_key')
                  }
                }
            }
            triggers {
                githubPush()
            }
            steps {
              dsl {
                external('jobDSL/seedJob.groovy')
              }
            }
            properties {
              authorizationMatrix {
                inheritanceStrategy {
                    nonInheriting()
                }
                entries {
                  group {
                    name('jenkins-admin')
                    permissions([ 'Job/Build', 'Job/Configure', 'Job/Read' ])
                  }
                }
              }
            }
          }
    appearance:
      themeManager:
        disableUserThemes: true
        theme: "darkSystem"
    unclassified:
      hashicorpVault:
        configuration:
          disableChildPoliciesOverride: false
          engineVersion: 2
          vaultCredentialId: "769574d0-cf8a-4558-9b56-6827ae4b1d3a"
          vaultUrl: "https://vault.local.geracorp.work"
      location:
        url: "https://jenkins.local.geracorp.work"
    credentials:
      system:
        domainCredentials:
          - credentials:
              - vaultTokenCredential:
                  description: "Vault Token"
                  id: "vaultToken"
                  scope: GLOBAL
                  token: "${VAULT_TOKEN}"
              - vaultUsernamePasswordCredentialImpl:
                  engineVersion: 1
                  id: "jenkins-github-integration"
                  passwordKey: "password"
                  path: "secret/tools/jenkins/credentials/jenkins-github-integration"
                  scope: GLOBAL
                  usernameKey: "username"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "nomad-token-jenkins-workers"
                  path: "nomad/creds/jenkins-workers"
                  scope: GLOBAL
                  vaultKey: "secret_id"
              - vaultSSHUserPrivateKeyImpl:
                  engineVersion: 1
                  id: "github_jenkins_deploy_key"
                  passphraseKey: "passphrase"
                  path: "secret/tools/jenkins/credentials/github_jenkins"
                  privateKeyKey: "private_key"
                  scope: GLOBAL
                  usernameKey: "username"
              - vaultSSHUserPrivateKeyImpl:
                  engineVersion: 1
                  id: "github_packer_proxmox_deploy_key"
                  passphraseKey: "passphrase"
                  path: "secret/tools/jenkins/credentials/github_packer_proxmox"
                  privateKeyKey: "private_key"
                  scope: GLOBAL
                  usernameKey: "username"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "proxmox_api_user"
                  path: "secret/tools/jenkins/credentials/proxmox_credentials"
                  scope: GLOBAL
                  vaultKey: "proxmox_api_user"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "proxmox_api_password"
                  path: "secret/tools/jenkins/credentials/proxmox_credentials"
                  scope: GLOBAL
                  vaultKey: "proxmox_api_password"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "proxmox_api_token_id_proxmox_api_token_secret"
                  path: "secret/tools/jenkins/credentials/proxmox_credentials"
                  scope: GLOBAL
                  vaultKey: "proxmox_api_token_id_proxmox_api_token_secret"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "vault_token"
                  path: "secret/tools/jenkins/credentials/jenkins-workers"
                  scope: GLOBAL
                  vaultKey: "token"
              - vaultKubernetesCredential:
                  id: "769574d0-cf8a-4558-9b56-6827ae4b1d3a"
                  role: "default"
                  scope: GLOBAL
                  usePolicies: false
    security:
      gitHostKeyVerificationConfiguration:
        sshHostKeyVerificationStrategy: "noHostKeyVerificationStrategy"
