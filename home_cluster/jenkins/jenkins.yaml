apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      serviceAccountName: jenkins-admin
      initContainers:
        - name: jenkins-install-plugin
          image: jenkins/jenkins:2.440.3-lts
          imagePullPolicy: IfNotPresent
          command: ["jenkins-plugin-cli"]
          args: [
            "--plugins",
            "dark-theme ansicolor pipeline-stage-view timestamper blueocean configuration-as-code git github hashicorp-vault-plugin job-dsl uno-choice kubernetes ldap matrix-auth",
            "--plugin-download-directory",
            "/var/jenkins_home/plugins/"
            ]
          resources:
            limits:
              memory: 2048Mi
              cpu: "1"
            requests:
              memory: 1024Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-pv
      containers:
        - name: jenkins
          image: jenkins/jenkins:2.440.3-lts
          imagePullPolicy: IfNotPresent
          env:
          - name: JAVA_OPTS
            value: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-jenkins-token
                key: token
          - name: LDAP_USER
            valueFrom:
              secretKeyRef:
                name: lldap-bind-cred
                key: user
          - name: LDAP_USER_PASS
            valueFrom:
              secretKeyRef:
                name: lldap-bind-cred
                key: password
          ports:
            - containerPort: 8080
              name: jenkins-http
              protocol: TCP
            - containerPort: 50000
              name: jenkins-agent
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: jenkins-http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: jenkins-http
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2048Mi
              cpu: "1"
            requests:
              memory: 1024Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-pv
            - mountPath: /var/jenkins_home/jenkins.yaml
              subPath: jenkins.yaml
              name: jenkins-casc-config-volume
      volumes:
        - name: jenkins-casc-config-volume
          configMap:
            name: jenkins-casc-config
  volumeClaimTemplates:
  - metadata:
      name: jenkins-pv
      namespace: jenkins
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5G
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-http
  namespace: jenkins
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: jenkins-http
  selector:
    app: jenkins
  type: ClusterIP
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jenkins-local-tls
  namespace: jenkins
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`jenkins.local.geracorp.work`)
    kind: Rule
    services:
    - name: jenkins-http
      port: 8080
  tls:
    secretName: letsencrypt-cloud-production-tls
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-agent
  namespace: jenkins
spec:
  ports:
    - port: 50000
      protocol: TCP
      targetPort: jenkins-agent
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jk-agnt-packer
  namespace: jenkins
spec:
  ports:
    - port: 8336
      protocol: TCP
      targetPort: jenkins-agt-pk
  selector:
    jenkins/label: jenkins-nomad-worker
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: jenkins-agent-packer
  namespace: jenkins
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`packer.local.geracorp.work`)
    kind: Rule
    services:
    - name: jk-agnt-packer
      port: 8336
  tls:
    secretName: letsencrypt-cloud-production-tls
