apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-casc-config
  namespace: jenkins
data:
  jenkins.yaml: |
    jenkins:
      agentProtocols:
      - "JNLP4-connect"
      - "Ping"
      clouds:
      - kubernetes:
          containerCap: 10
          containerCapStr: "10"
          jenkinsTunnel: "jenkins-agent:50000"
          jenkinsUrl: "http://jenkins-http:8080"
          name: "Kubernetes"
          namespace: "jenkins"
          serverUrl: "https://k8s-masters.home.local:6443"
          templates:
          - containers:
            - image: "docker-registry.local.geracorp.work/tools/jenkins-agent:v1.0.1"
              livenessProbe:
                failureThreshold: 0
                initialDelaySeconds: 0
                periodSeconds: 0
                successThreshold: 0
                timeoutSeconds: 0
              name: "jnlp"
              ports:
              - containerPort: 8336
                hostPort: 30001
                name: "jenkins-agt-pk"
              workingDir: "/home/jenkins/agent"
            id: "363c14a4-efac-48ca-b506-7d42709aea2c"
            imagePullSecrets:
            - name: "docker-registry-geracorp-login"
            label: "jenkins-nomad-worker"
            name: "jenkins-agent"
            namespace: "jenkins"
            yamlMergeStrategy: "override"
      crumbIssuer:
        standard:
          excludeClientIPFromCrumb: false
      disableRememberMe: false
      disabledAdministrativeMonitors:
      - "hudson.util.DoubleLaunchChecker"
      labelAtoms:
      - name: "built-in"
      - name: "jenkins-agent-8kb89"
      - name: "jenkins-nomad-worker"
      - name: "master"
      labelString: "master"
      numExecutors: 2
      remotingSecurity:
        enabled: true
    jobs:
      - script: >
          job('seedjob') {
            label('master')
            logRotator(-1, 10)
            scm {
                git {
                  branch('master')
                  remote {
                    github('gera-corp/jenkins', 'ssh', 'github.com')
                    credentials('github_jenkins_deploy_key')
                  }
                }
            }
            triggers {
                githubPush()
            }
            steps {
              dsl {
                external('jobDSL/seedJob.groovy')
              }
            }
          }
    appearance:
      themeManager:
        disableUserThemes: true
        theme: "darkSystem"
    unclassified:
      hashicorpVault:
        configuration:
          vaultCredentialId: "vaultToken"
          vaultUrl: "http://vault.service.consul:8200"
      location:
        url: "https://jenkins.local.geracorp.work"
    credentials:
      system:
        domainCredentials:
          - credentials:
              - vaultTokenCredential:
                  description: "Vault Token"
                  id: "vaultToken"
                  scope: GLOBAL
                  token: "${VAULT_TOKEN}"
              - vaultUsernamePasswordCredentialImpl:
                  engineVersion: 1
                  id: "jenkins-github-integration"
                  passwordKey: "password"
                  path: "secret/tools/jenkins/credentials/jenkins-github-integration"
                  scope: GLOBAL
                  usernameKey: "username"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "nomad-token-jenkins-workers"
                  path: "nomad/creds/jenkins-workers"
                  scope: GLOBAL
                  vaultKey: "secret_id"
              - vaultSSHUserPrivateKeyImpl:
                  engineVersion: 1
                  id: "github_jenkins_deploy_key"
                  passphraseKey: "passphrase"
                  path: "secret/tools/jenkins/credentials/github_jenkins"
                  privateKeyKey: "private_key"
                  scope: GLOBAL
                  usernameKey: "username"
              - vaultSSHUserPrivateKeyImpl:
                  engineVersion: 1
                  id: "github_packer_proxmox_deploy_key"
                  passphraseKey: "passphrase"
                  path: "secret/tools/jenkins/credentials/github_packer_proxmox"
                  privateKeyKey: "private_key"
                  scope: GLOBAL
                  usernameKey: "username"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "proxmox_api_user"
                  path: "secret/tools/jenkins/credentials/proxmox_credentials"
                  scope: GLOBAL
                  vaultKey: "proxmox_api_user"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "proxmox_api_password"
                  path: "secret/tools/jenkins/credentials/proxmox_credentials"
                  scope: GLOBAL
                  vaultKey: "proxmox_api_password"
              - vaultStringCredentialImpl:
                  engineVersion: 1
                  id: "vault_token"
                  path: "secret/tools/jenkins/credentials/jenkins-workers"
                  scope: GLOBAL
                  vaultKey: "token"
    security:
      gitHostKeyVerificationConfiguration:
        sshHostKeyVerificationStrategy: "noHostKeyVerificationStrategy"
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-jenkins-token
  namespace: jenkins
  annotations:
    avp.kubernetes.io/path: "secret/tools/jenkins/vault-token"
    avp.kubernetes.io/kv-version: "1"
type: Opaque
data:
  token: <token>
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: jenkins
  name: jenkins
  namespace: jenkins
spec:
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      serviceAccountName: jenkins-admin
      initContainers:
        - name: jenkins-install-plugin
          image: jenkins/jenkins:2.426.3-lts
          imagePullPolicy: IfNotPresent
          command: ["jenkins-plugin-cli"]
          args: [
            "--plugins",
            "dark-theme ansicolor pipeline-stage-view timestamper blueocean configuration-as-code git github hashicorp-vault-plugin job-dsl uno-choice kubernetes",
            "--plugin-download-directory",
            "/var/jenkins_home/plugins/"
            ]
          resources:
            limits:
              memory: 2048Mi
              cpu: "1"
            requests:
              memory: 1024Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-pv
      containers:
        - name: jenkins
          image: jenkins/jenkins:2.426.3-lts
          imagePullPolicy: IfNotPresent
          env:
          - name: JAVA_OPTS
            value: "-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"
          - name: VAULT_TOKEN
            valueFrom:
              secretKeyRef:
                name: vault-jenkins-token
                key: token
          ports:
            - containerPort: 8080
              name: jenkins-http
              protocol: TCP
            - containerPort: 50000
              name: jenkins-agent
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: jenkins-http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: jenkins-http
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2048Mi
              cpu: "1"
            requests:
              memory: 1024Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /var/jenkins_home
              name: jenkins-pv
            - mountPath: /var/jenkins_home/jenkins.yaml
              subPath: jenkins.yaml
              name: jenkins-casc-config-volume
      volumes:
        - name: jenkins-casc-config-volume
          configMap:
            name: jenkins-casc-config
  volumeClaimTemplates:
  - metadata:
      name: jenkins-pv
      namespace: jenkins
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 5G
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-http
  namespace: jenkins
spec:
  ports:
    - port: 8080
      protocol: TCP
      targetPort: jenkins-http
  selector:
    app: jenkins
  type: ClusterIP
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jenkins-local-tls
  namespace: jenkins
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`jenkins.local.geracorp.work`)
    kind: Rule
    services:
    - name: jenkins-http
      port: 8080
  tls:
    secretName: wildcard-home-local-crt
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-agent
  namespace: jenkins
spec:
  ports:
    - port: 50000
      protocol: TCP
      targetPort: jenkins-agent
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  name: jk-agnt-packer
  namespace: jenkins
spec:
  ports:
    - port: 8336
      protocol: TCP
      targetPort: jenkins-agt-pk
  selector:
    jenkins/label: jenkins-nomad-worker
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: jenkins-agent-packer
  namespace: jenkins
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`packer.local.geracorp.work`)
    kind: Rule
    services:
    - name: jk-agnt-packer
      port: 8336
  tls:
    secretName: wildcard-home-local-crt
