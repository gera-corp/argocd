apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nod32update
  name: nod32update
  namespace: tools
spec:
  selector:
    matchLabels:
      app: nod32update
  replicas: 1
  template:
    metadata:
      labels:
        app: nod32update
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: nod32update
          image: gerain/nod32py:latest
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c"]
          args:
          - |
            "nginx" "-g" "daemon off;" &
            while true; do /usr/local/bin/python /app/pynod/update.py; sleep 3h; done
          ports:
            - containerPort: 80
              name: http-nod32up
              protocol: TCP
          # readinessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /index.html
          #     port: 80
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          #   successThreshold: 1
          #   timeoutSeconds: 2
          # livenessProbe:
          #   failureThreshold: 3
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   successThreshold: 1
          #   tcpSocket:
          #     port: 3000
          #   timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
          volumeMounts:
            - mountPath: /var/www/nod32mirror
              name: nod32update-base-pv
            # - mountPath: /nod32update/log
            #   name: nod32update-logs-pv
      volumes:
        - name: nod32update-base-pv
          persistentVolumeClaim:
            claimName: nod32update-base-pv
        # - name: nod32update-logs-pv
        #   persistentVolumeClaim:
        #     claimName: nod32update-logs-pv
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nod32update-base-pv
  namespace: tools
spec:
  storageClassName: nfs-client
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5G
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nod32update-logs-pv
  namespace: tools
spec:
  storageClassName: nfs-client
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1G
---
apiVersion: v1
kind: Service
metadata:
  name: nod32update
  namespace: tools
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: http-nod32up
  selector:
    app: nod32update
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nod32update-cert
  namespace: tools
spec:
  commonName: nod32mirror.geracorp.ru
  secretName: nod32update-cert
  dnsNames:
    - nod32mirror.geracorp.ru
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: nod32update-tls
  namespace: tools
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`nod32mirror.geracorp.ru`)
    kind: Rule
    middlewares:
    - name: nod32update-auth
    services:
    - name: nod32update
      port: 80
  tls:
    secretName: nod32update-cert
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: nod32update-auth
  namespace: tools
spec:
  basicAuth:
    secret: nod32update-secret
---
apiVersion: v1
kind: Secret
metadata:
  name: nod32update-secret
  namespace: tools
type: Opaque
stringData:
  users: vault:secret/data/nod32update#users
