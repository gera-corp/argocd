---
apiVersion: v1
kind: ConfigMap
metadata:
  name: docker-registry-ui-config
  namespace: tools
data:
  config.yml: |
    version: 0.1
    log:
      level: info
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
        Access-Control-Allow-Origin: ['*']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: docker-registry-ui
  name: docker-registry-ui
  namespace: tools
spec:
  selector:
    matchLabels:
      app: docker-registry-ui
  template:
    metadata:
      labels:
        app: docker-registry-ui
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: docker-registry-ui
          image: joxit/docker-registry-ui:2.5.6
          imagePullPolicy: IfNotPresent
          env:
            - name: SINGLE_REGISTRY
              value: "true"
            - name: REGISTRY_TITLE
              value: "GERACORP Registry"
            - name: DELETE_IMAGES
              value: "true"
            - name: SHOW_CONTENT_DIGEST
              value: "false"
            - name: SHOW_CATALOG_NB_TAGS
              value: "true"
            - name: CATALOG_MIN_BRANCHES
              value: "1"
            - name: CATALOG_MAX_BRANCHES
              value: "1"
            - name: TAGLIST_PAGE_SIZE
              value: "100"
            - name: REGISTRY_SECURED
              value: "false"
            - name: CATALOG_ELEMENTS_LIMIT
              value: "1000"
            - name: PULL_URL
              value: "docker-registry.geracorp.ru"
            - name: NGINX_PROXY_PASS_URL
              value: "http://docker-registry.tools.svc.cluster.local:5000"
          ports:
            - containerPort: 80
              name: http-registry
              protocol: TCP
          # readinessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /index.html
          #     port: 80
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          #   successThreshold: 1
          #   timeoutSeconds: 2
          # livenessProbe:
          #   failureThreshold: 3
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          #   successThreshold: 1
          #   tcpSocket:
          #     port: 3000
          #   timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry-ui
  namespace: tools
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: http-registry
  selector:
    app: docker-registry-ui
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: docker-registry-ui-cert
  namespace: tools
spec:
  commonName: docker-registry-ui.geracorp.ru
  secretName: docker-registry-ui-cert
  dnsNames:
    - docker-registry-ui.geracorp.ru
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: docker-registry-ui-tls
  namespace: tools
spec:
  entryPoints:
    - websecure
  routes:
  - match: Host(`docker-registry-ui.geracorp.ru`)
    kind: Rule
    middlewares:
    - name: docker-registry-auth
    services:
    - name: docker-registry-ui
      port: 80
  tls:
    secretName: docker-registry-ui-cert
