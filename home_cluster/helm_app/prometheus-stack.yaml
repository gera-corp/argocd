apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  destination:
    name: in-cluster
    namespace: monitoring
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  source:
    repoURL: 'https://prometheus-community.github.io/helm-charts'
    chart: kube-prometheus-stack
    targetRevision: 61.*
    helm:
      skipCrds: true
      values: |-
        grafana:
          enabled: true
          image:
            registry: docker.io
            repository: grafana/grafana
            # if not set appVersion field from Chart.yaml is used
            tag: "11.0.1"
            sha: ""
            pullPolicy: IfNotPresent
          persistence:
            enabled: true
            type: pvc
            accessModes:
              - ReadWriteOnce
            size: 5Gi
            storageClassName: nfs-client
        alertmanager:
          enabled: true
          config:
            global:
              resolve_timeout: 5m
            inhibit_rules:
              - source_matchers:
                  - 'severity = critical'
                target_matchers:
                  - 'severity =~ warning|info'
                equal:
                  - 'namespace'
                  - 'alertname'
              - source_matchers:
                  - 'severity = warning'
                target_matchers:
                  - 'severity = info'
                equal:
                  - 'namespace'
                  - 'alertname'
              - source_matchers:
                  - 'alertname = InfoInhibitor'
                target_matchers:
                  - 'severity = info'
                equal:
                  - 'namespace'
              - target_matchers:
                  - 'alertname = InfoInhibitor'
            route:
              group_by: ['namespace']
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: 'telegram'
              routes:
              - receiver: 'telegram'
                matchers:
                  - alertname = "Watchdog"
            receivers:
            - name: 'telegram'
              telegram_configs:
              - bot_token: '7189406686:AAEEprycgOq_Ct_B6YbOQmEUK30fHIXCeyI'
                api_url: 'https://api.telegram.org'
                chat_id: 282307402
                parse_mode: ''
            templates:
            - '/etc/alertmanager/config/*.tmpl'
          templateFiles:
            template_1.tmpl: |-
              {{ define "telegram.default.message" }}
              Alert:
              {{ range .Alerts }}
                *Alert:* {{ .Annotations.summary }}
                *Description:* {{ .Annotations.description }}
                *Severity:* {{ .Labels.severity }}
                *Status:* {{ .Status }}
                *Starts At:* {{ .StartsAt }}
                *Ends At:* {{ .EndsAt }}
              {{ end }}
              {{ end }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack-crds
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  destination:
    name: in-cluster
    namespace: monitoring
  project: default
  source:
    repoURL: https://github.com/prometheus-community/helm-charts.git
    path: charts/kube-prometheus-stack/charts/crds/
    targetRevision: kube-prometheus-stack-61.*
    directory:
      recurse: true
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - Replace=true
    automated:
      prune: true
      selfHeal: true
